PART
{
// --- general parameters ---
name = rn_vostok_tdu
module = Part
author = Raidernick

// --- asset parameters ---
MODEL
	{
	  model = RN_Soyuz/Parts/7k/vostok_tdu
          scale = 0.80, 0.80, 0.80
	}
//mesh = vostok_tdu.mu
scale = 0.80
rescaleFactor = 1

//CoMOffset = 0, -1.0, 0

// --- node definitions ---
node_stack_top = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 2
node_stack_bottom = 0.0, -0.95, 0.0, 0.0, -1.0, 0.0, 2

// --- FX definitions ---

fx_exhaustFlame_blue_small = 0.0, -3.0, 0.0, 0.0, 1.0, 0.0, running
fx_exhaustLight_blue = 0.0, -3.0, 0.0, 0.0, 0.0, 1.0, running
fx_smokeTrail_light = 0.0, -3.0, 0.0, 0.0, 1.0, 0.0, running
fx_exhaustSparks_flameout = 0.0, 3.0, 0.0, 0.0, 1.0, 0.0, flameout

// --- Sound FX definition ---

sound_vent_medium = engage
sound_rocket_hard = running
sound_vent_soft = disengage
sound_explosion_low = flameout


// --- editor parameters ---
TechRequired = generalRocketry
cost = 800
category = Propulsion
subcategory = 0
title = Vostok/Voskhod Service Module
manufacturer = RN Industries
description = Service module for Vostok/Voskhod spacecraft
tags = vostok voskhod

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,1,1

// --- standard part parameters ---
mass = 2.56
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 12
maxTemp = 2900
breakingForce = 50000
breakingTorque = 50000
linearStrength = 22000
angularStrength = 22000
emissiveConstant = 0.8

// --- rcs fuel tank parameters ---

//PAO-back
MODULE
{
name = TankPriorityModule
Priority = 30
}


RESOURCE
{
 name = MonoPropellant
 amount = 170
 maxAmount = 170
}


RESOURCE
{
 name = ElectricCharge
 amount = 500
 maxAmount = 500
}

EFFECTS
	{
		running
		{
			AUDIO_MULTI_POOL
			{
				channel = Ship
				transformName = RCSthruster
				clip = sound_rocket_mini
				volume = 0.0 0.0
				volume = 0.1 0.0
				volume = 0.5 0.025
				volume = 1.0 0.1
				pitch = 0.0 0.75
				pitch = 1.0 1.5
				loop = true
			}
			MODEL_MULTI_PARTICLE
			{
				modelName = Squad/FX/Monoprop_small
				transformName = RCSthruster
				emission = 0.0 0.0
				emission = 0.1 0.0
				emission = 1.0 1.0
				speed = 0.0 0.8
				speed = 1.0 1.0
				localRotation = -90, 0, 0
			}
		}		
	}
	
	MODULE
	{
		name = ModuleRCSFX
		stagingEnabled = False
		thrusterTransformName = RCSthruster
		thrusterPower = 0.3
		resourceName = MonoPropellant
		resourceFlowMode = STAGE_PRIORITY_FLOW
		runningEffectName = running
		atmosphereCurve
		{
			key = 0 260
			key = 1 100
			key = 4 0.001
		}
	}

MODULE
{
	name = ModuleGenerator
	isAlwaysActive = false
	requiresAllinputs = true
	resourceThreshold = 0.05
	activateGUIName = Activate Fuel Cell
	shutdownGUIName = Shutdown Fuel Cell
	efficiency = 95
		INPUT_RESOURCE
		{
		   name = MonoPropellant
		   rate = 0.003
		}	
		OUTPUT_RESOURCE
		{
		   name = ElectricCharge
		   rate = 0.35
		}
}

MODULE
{
	name = ModuleEngines
	thrustVectorTransformName = thrustTransform
	exhaustDamage = True
	exhaustDamageMultiplier = 20
	ignitionThreshold = 0.1
	minThrust = 0
	maxThrust = 30
	heatProduction = 50
	fxOffset = 0, 0, 0
	EngineType = MonoProp
	PROPELLANT
	{
		name = MonoPropellant
       	        ratio = 1
		DrawGauge = True
	}
	
	atmosphereCurve
 	{
   	 key = 0 170
  	 key = 1 120
 	}
}

MODULE
{
	name = ModuleSurfaceFX
	thrustProviderModuleIndex = 0
	fxMax = 0.3
	maxDistance = 30
	falloff = 1.7
	thrustTransformName = thrustTransform
}

MODULE
{
name = BDFSanimateGeneric
animationName = Deploy
startEventGUIName = Deploy Radiators
endEventGUIName = Undeploy Radiators
toggleActionName = Toggle Radiators
startDeployed = False
// Animation Layer. If you have more than one animation on a part, this must be unique for each one in order for them to not interrupt each other. If the stock engine heat animation module is used, that’s probably on layer 0, so make this 1 or higher.
layer = 1
playAnimationOnEditorSpawn = False
useActionEditorPopup = True
// If you have more than one BDFSanimateGeneric on a part, give each a unique ID to. This makes the popup menu appear in a separate location for each module, and not steal each others windows. values: 0-9.
moduleID = 0
}
MODULE
{
name = BDFSanimateGeneric
animationName = Open
startEventGUIName = Deploy Antennas
endEventGUIName = Undeploy Antennas
toggleActionName = Toggle Antennas
startDeployed = False
// Animation Layer. If you have more than one animation on a part, this must be unique for each one in order for them to not interrupt each other. If the stock engine heat animation module is used, that’s probably on layer 0, so make this 1 or higher.
layer = 2
playAnimationOnEditorSpawn = False
useActionEditorPopup = True
// If you have more than one BDFSanimateGeneric on a part, give each a unique ID to. This makes the popup menu appear in a separate location for each module, and not steal each others windows. values: 0-9.
moduleID = 1
}

//Reflection shader plugin
    MODULE
    {
        name = ReflectiveShaderModule

        // Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
        CubeMapSize = 16

        // How deep the reflection will be ("how far the reflection camera will view")
        FarClipPlane = 500000000
		// How far away must something be before it is reflected
		NearClipPlane = .1

        // Set to false to render all 6 faces of the CubeMap at once (six times slower~)
        OneFacePerFrame = true

        // The shader to find. The reflective shaders are:
        // Reflective/Diffuse
        // Reflective/VertexLit
        // Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
        ShaderName = Reflective/Bumped Diffuse
		realTimeReflection = False
		

        // The height of the parallax map. Values are accepted between 0.005 and 0.08.
        ParallaxHeight = 0.01

        // How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
        ReflectionStrength = 0.50
		//ReflectionColor = 0, 0, 0, 0

        // Use this variable to specify which meshes to apply the shader to.
        // Not using this variable will default to the first found mesh.
        // Use the actual mesh name for the value. Or you could use:
        // all - to replace the shader on all meshes in the model.
        MeshesToChange = TDU_SHolder1,TDU_SHolder2,TDU_SHolder3,TDU_SHolder4,TDU_BHolders,TDU_CBoxes,TDU_LSensors,TDU_Radiator3L,TDU_Radiator3R,TDU_Radiator3L.001,TDU_Radiator3R.001,TDU_Radiator3L.002,TDU_Radiator3R.002,TDU_Radiator3L.003,TDU_Radiator3R.003,TDU_Radiator3L.004,TDU_Radiator3R.004,TDU_Radiator3L.005,TDU_Radiator3R.005,TDU_Radiator3L.006,TDU_Radiator3R.006,TDU_Radiator3L.007,TDU_Radiator3R.007

        // How shiny the specularity will be (if specular).
        // This value will be automatically set if it already exists on the previous shader and is not defined here.
        Shininess = 1.0
		updateRate = 130

        // These variables should be used together only.
        // These values will be automatically set if they already exist on the previous shader and are not defined here
        SpecColorR = 0.8
        SpecColorG = 0.8
        SpecColorB = 0.8
        SpecColorA = 0.8
		rimFalloff = 5.0
		rimColor = 0.8242, 0.6445, 0.1914, 1.0
		ReflectionColor = 0.6242, 0.6445, 0.69, 1.0
    }

}

@PART[rn_vostok_tdu]:NEEDS[RealismOverhaul]
{
	!MODULE[ModuleRCS*] {}
}
