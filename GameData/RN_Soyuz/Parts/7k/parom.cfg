PART
{
// --- general parameters ---
name = rn_parom
module = Part
author = Raidernick

// --- asset parameters ---
MODEL
	{
	  model = RN_Soyuz/Parts/7k/parom
          scale = 0.80, 0.80, 0.80
	}
//mesh = parom.mu
scale = 0.80
rescaleFactor = 1
// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z

node_stack_bottom = 0.0, -2.36291, 0.0, 0.0, -1.0, 0.0, 2
node_stack_top = 0.0, 2.82263, 0.0, 0.0, 1.0, 0.0, 2

node_stack_rcs = 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1

fx_exhaustFlame_blue_small = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, running
fx_exhaustLight_blue = 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, running
fx_smokeTrail_light = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, running
fx_exhaustSparks_flameout = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, flameout


// --- Sound FX definition ---

sound_vent_medium = engage
sound_rocket_mini = running
sound_vent_soft = disengage
sound_explosion_low = flameout

// --- editor parameters ---
TechRequired = generalRocketry
cost = 200000
category = Pods
subcategory = 0
title = Parom Orbital Tug
manufacturer = RN Industries
description = This spacecraft can operate unmanned for 180 days and has a 15 year lifespan. It was designed to be refueled and restocked with supplies.
tags = parom tug

attachRules = 1,1,1,1,0

// --- standard part parameters ---
mass = 4.5
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 18
breakingForce = 50000
breakingTorque = 50000
linearStrength = 22000
angularStrength = 22000
maxTemp = 2000
vesselType = Probe
CrewCapacity = 2
thermalMassModifier = 2.0
emissiveConstant = 0.95
heatConductivity = 0.04
//CoMOffset = 0, 1.2, 0
stageOffset = 1
childStageOffset = 1
stagingIcon = LIQUID_ENGINE

MODULE
{
	name = ModuleCommand
	minimumCrew = 0
	RESOURCE
	{
		name = ElectricCharge
		rate = 0.08
	}
	hasHibernation = True
	hibernateOnWarp = True
}

MODULE
{
	name = ModuleSAS
	SASServiceLevel = 3
}
INTERNAL
{
  name = PAROM_internal
}

MODULE
{
name = TankPriorityModule
Priority = 80
}

RESOURCE
{
	name = ElectricCharge
	amount = 765
	maxAmount = 765
}

RESOURCE
{
 name = MonoPropellant
 amount = 550
 maxAmount = 550
}

MODULE
{
	name = ModuleEngines
	thrustVectorTransformName = thrustTransform
	exhaustDamage = True
	ignitionThreshold = 0.1
	minThrust = 0
	maxThrust = 45
	heatProduction = 50
	fxOffset = 0, 0, 0
	PROPELLANT
	{
		name = MonoPropellant
       	        ratio = 1
		DrawGauge = True
	}
	
	atmosphereCurve
 	{
   	 key = 0 370
  	 key = 1 320
 	}
}

MODULE
{
	name = ModuleReactionWheel
	
	PitchTorque = 10
	YawTorque = 10
	RollTorque = 5
	
	RESOURCE
	{
		name = ElectricCharge
		rate = 0.3
	}
}

// Science
MODULE
{
	name = ModuleScienceContainer
	
	reviewActionName = Review Data
	storeActionName = Store Experiments	
	collectActionName = Take Data
	
	evaOnlyStorage = False
	storageRange = 2
	
	allowRepeatedSubjects = True
}

MODULE
{
	name = ModuleScienceExperiment
	experimentID = mobileMaterialsLab

	experimentActionName = Run Lab Experiment
	resetActionName = Reset Lab Experiment

	useStaging = False
	useActionGroups = True
	hideUIwhenUnavailable = True 
	resettable = True
	resettableOnEVA = True
	rerunnable = True
	xmitDataScalar = 0.4
	
	FxModules = 0
}
MODULE
{
	name = ModuleScienceExperiment	
	
	experimentID = crewReport
	
	experimentActionName = Crew Report
	resetActionName = Discard Crew Report
	reviewActionName = Review Report
	
	useStaging = False	
	useActionGroups = True
	hideUIwhenUnavailable = True	
	rerunnable = True
	
	xmitDataScalar = 1.0
}

//Connected Living
MODULE
{
	name = ModuleConnectedLivingSpace
	passable = true
}

	MODULE
	{
		name = ModuleDataTransmitter
		antennaType = DIRECT
		packetInterval = 0.4
		packetSize = 2
		packetResourceCost = 10.0
		requiredResource = ElectricCharge
		antennaPower = 500000
	}

MODULE
{
name = BDFSanimateGeneric
animationName = Deploy
startEventGUIName = Extend Antennae
endEventGUIName = Retract Antennae
toggleActionName = Toggle Antennae
startDeployed = False
// Animation Layer. If you have more than one animation on a part, this must be unique for each one in order for them to not interrupt each other. If the stock engine heat animation module is used, that’s probably on layer 0, so make this 1 or higher.
layer = 1
playAnimationOnEditorSpawn = False
useActionEditorPopup = True
// If you have more than one BDFSanimateGeneric on a part, give each a unique ID to. This makes the popup menu appear in a separate location for each module, and not steal each others windows. values: 0-9.
moduleID = 0
}

}
